// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoiceSoundStudio.DAL.Application;

#nullable disable

namespace VoiceStudio.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20230428170653_ModelMigro")]
    partial class ModelMigro
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActorStatusId")
                        .HasColumnType("int");

                    b.Property<string>("Biography")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Fio")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<int>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("Voice")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ActorStatusId");

                    b.HasIndex("StudioId");

                    b.ToTable("Actors");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.ActorStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ActorStatuses");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.OrderToVoicing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<int>("StudioId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusId");

                    b.HasIndex("StudioId");

                    b.HasIndex("TypeId");

                    b.ToTable("OrderVoicings");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.OrderToVoicingActor", b =>
                {
                    b.Property<int>("OrderVoicingId")
                        .HasColumnType("int");

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.HasKey("OrderVoicingId", "ActorId");

                    b.HasIndex("ActorId");

                    b.HasIndex("OrderVoicingId");

                    b.ToTable("OrderToVoicingActors");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Desc")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Studio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImagePath")
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Studio", (string)null);
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Types", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Actor", b =>
                {
                    b.HasOne("VoiceSoundStudio.DAL.Models.ActorStatus", "ActorStatus")
                        .WithOne("Actor")
                        .HasForeignKey("VoiceSoundStudio.DAL.Models.Actor", "ActorStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoiceSoundStudio.DAL.Models.Studio", "Studio")
                        .WithMany("Actors")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActorStatus");

                    b.Navigation("Studio");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.OrderToVoicing", b =>
                {
                    b.HasOne("VoiceSoundStudio.DAL.Models.Status", "Status")
                        .WithOne("Film")
                        .HasForeignKey("VoiceSoundStudio.DAL.Models.OrderToVoicing", "StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoiceSoundStudio.DAL.Models.Studio", "Studio")
                        .WithMany("FilmApplication")
                        .HasForeignKey("StudioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoiceSoundStudio.DAL.Models.Types", "Type")
                        .WithOne("Film")
                        .HasForeignKey("VoiceSoundStudio.DAL.Models.OrderToVoicing", "TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Status");

                    b.Navigation("Studio");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.OrderToVoicingActor", b =>
                {
                    b.HasOne("VoiceSoundStudio.DAL.Models.Actor", "Actor")
                        .WithMany("OrderToVoicingActors")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VoiceSoundStudio.DAL.Models.OrderToVoicing", "OrderToVoicing")
                        .WithMany("OrderToVoicingActors")
                        .HasForeignKey("OrderVoicingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("OrderToVoicing");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Actor", b =>
                {
                    b.Navigation("OrderToVoicingActors");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.ActorStatus", b =>
                {
                    b.Navigation("Actor")
                        .IsRequired();
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.OrderToVoicing", b =>
                {
                    b.Navigation("OrderToVoicingActors");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Status", b =>
                {
                    b.Navigation("Film")
                        .IsRequired();
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Studio", b =>
                {
                    b.Navigation("Actors");

                    b.Navigation("FilmApplication");
                });

            modelBuilder.Entity("VoiceSoundStudio.DAL.Models.Types", b =>
                {
                    b.Navigation("Film")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
